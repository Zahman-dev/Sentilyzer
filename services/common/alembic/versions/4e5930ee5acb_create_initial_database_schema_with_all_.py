"""Create initial database schema with all tables

Revision ID: 4e5930ee5acb
Revises: 2b4f25e11063
Create Date: 2025-06-28 16:59:31.115700

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4e5930ee5acb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create users table
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('hashed_password', sa.String(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)

    # Create api_keys table
    op.create_table('api_keys',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key_hash', sa.String(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_keys_id'), 'api_keys', ['id'], unique=False)
    op.create_index(op.f('ix_api_keys_key_hash'), 'api_keys', ['key_hash'], unique=True)
    op.create_index(op.f('ix_api_keys_user_id'), 'api_keys', ['user_id'], unique=False)

    # Create raw_articles table
    op.create_table('raw_articles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('source', sa.String(), nullable=False),
        sa.Column('ticker', sa.String(), nullable=True),
        sa.Column('article_url', sa.String(), nullable=False),
        sa.Column('headline', sa.Text(), nullable=False),
        sa.Column('article_text', sa.Text(), nullable=False),
        sa.Column('published_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('is_processed', sa.Boolean(), nullable=False, default=False),
        sa.Column('has_error', sa.Boolean(), nullable=False, default=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_raw_articles_id'), 'raw_articles', ['id'], unique=False)
    op.create_index(op.f('ix_raw_articles_source'), 'raw_articles', ['source'], unique=False)
    op.create_index(op.f('ix_raw_articles_ticker'), 'raw_articles', ['ticker'], unique=False)
    op.create_index(op.f('ix_raw_articles_article_url'), 'raw_articles', ['article_url'], unique=True)
    op.create_index(op.f('ix_raw_articles_published_at'), 'raw_articles', ['published_at'], unique=False)
    op.create_index(op.f('ix_raw_articles_is_processed'), 'raw_articles', ['is_processed'], unique=False)

    # Create sentiment_scores table
    op.create_table('sentiment_scores',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('article_id', sa.Integer(), nullable=False),
        sa.Column('model_version', sa.String(), nullable=False, default='placeholder-v1.0'),
        sa.Column('sentiment_score', sa.Float(), nullable=False),
        sa.Column('sentiment_label', sa.String(), nullable=False),
        sa.Column('processed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['article_id'], ['raw_articles.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sentiment_scores_id'), 'sentiment_scores', ['id'], unique=False)
    op.create_index(op.f('ix_sentiment_scores_article_id'), 'sentiment_scores', ['article_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop tables in reverse order
    op.drop_index(op.f('ix_sentiment_scores_article_id'), table_name='sentiment_scores')
    op.drop_index(op.f('ix_sentiment_scores_id'), table_name='sentiment_scores')
    op.drop_table('sentiment_scores')
    
    op.drop_index(op.f('ix_raw_articles_is_processed'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_published_at'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_article_url'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_ticker'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_source'), table_name='raw_articles')
    op.drop_index(op.f('ix_raw_articles_id'), table_name='raw_articles')
    op.drop_table('raw_articles')
    
    op.drop_index(op.f('ix_api_keys_user_id'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_key_hash'), table_name='api_keys')
    op.drop_index(op.f('ix_api_keys_id'), table_name='api_keys')
    op.drop_table('api_keys')
    
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')

    # ### end Alembic commands ### 